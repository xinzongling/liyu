var viewSize = (function(){ 
	var pageWidth = window.innerWidth, 
	pageHeight = window.innerHeight; 
if (typeof pageWidth != 'number') { if (document.compatMode == 'CSS1Compat') { pageHeight = document.documentElement.clientHeight; pageWidth = document.documentElement.clientWidth; } else { pageHeight = document.body.clientHeight; pageWidth = document.body.clientWidth; } }; if(pageWidth >= pageHeight){ pageWidth = pageHeight * 360 / 640; } pageWidth = pageWidth > 414 ? 414 : pageWidth; pageHeight = pageHeight > 736 ? 736 : pageHeight; return { width: pageWidth, height: pageHeight }; })(); 
(function(){ var lastTime = 0; var prefixes = 'webkit moz ms o'.split(' '); //各浏览器前缀 var requestAnimationFrame = window.requestAnimationFrame; var cancelAnimationFrame = window.cancelAnimationFrame; var prefix; //通过遍历各浏览器前缀，来得到requestAnimationFrame和cancelAnimationFrame在当前浏览器的实现形式 for( var i = 0; i < prefixes.length; i++ ) { if ( requestAnimationFrame && cancelAnimationFrame ) { break; } prefix = prefixes[i]; requestAnimationFrame = requestAnimationFrame || window[ prefix + 'RequestAnimationFrame' ]; cancelAnimationFrame = cancelAnimationFrame || window[ prefix + 'CancelAnimationFrame' ] || window[ prefix + 'CancelRequestAnimationFrame' ]; } //如果当前浏览器不支持requestAnimationFrame和cancelAnimationFrame，则会退到setTimeout if ( !requestAnimationFrame || !cancelAnimationFrame ) { requestAnimationFrame = function( callback, element ) { var currTime = new Date().getTime(); //为了使setTimteout的尽可能的接近每秒60帧的效果 var timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) ); var id = window.setTimeout( function() { callback( currTime + timeToCall ); }, timeToCall ); lastTime = currTime + timeToCall; return id; }; cancelAnimationFrame = function( id ) { window.clearTimeout( id ); }; } //得到兼容各浏览器的API window.requestAnimationFrame = requestAnimationFrame; window.cancelAnimationFrame = cancelAnimationFrame; })() var canvas = document.getElementById('canvas'), ctx = canvas.getContext('2d'), img = new Image(), k= viewSize.height / 600, canClick, gameover, canCount, isStarted, timer, ground, bird, score, Pies, startBtn = document.getElementById('restart'); //导入图像 img.onload = start; img.src = './img.png'; //设置画布宽高 canvas.width = viewSize.width; canvas.height = viewSize.height; init(); function init(){ canClick = true; gameover = false; canCount = true; isStarted = false; startBtn.style.display = 'none'; ground = new Ground(); bird = new Bird(); score = new Score(); Pies = []; createPie(); } function destroy(){ ground = null; bird = null; score = null; for(var i = 0, len = Pies.length; i < len; i++){ Pies[i] = null; } Pies = []; } /** * 开始游戏 */ function start(){ check(); if(gameover){ console.log(1) ctx.drawImage(img, 170, 990, 300, 90, Math.ceil(viewSize.width * 0.5 - k * 277 * 0.5), Math.ceil(200 / 800 * viewSize.height), 277 * k, 75 * k) ctx.drawImage(img, 550, 1005, 160, 90, Math.ceil(viewSize.width * 0.5 - k * 160 * 0.5), Math.ceil(400 / 800 * viewSize.height), 160 * k, 90 * k) startBtn.style.width = 160 * k + 'px'; startBtn.style.height = 90 * k + 'px'; startBtn.style.left = Math.ceil(viewSize.width * 0.5 - k * 160 * 0.5) + 'px'; startBtn.style.top = Math.ceil(400 / 800 * viewSize.height) + 'px'; startBtn.style.display = 'block'; cancelAnimationFrame(timer); destroy(); }else{ //清除 ctx.clearRect(0,0,viewSize.width,viewSize.height); //画背景 ctx.drawImage(img, 0, 0, 800, 600, 0, 0, Math.ceil(k * 800), viewSize.height); if(isStarted){ //第一组水管出左边屏幕，移除水管 if(Pies[0].canX <= 

alert('aaa')

